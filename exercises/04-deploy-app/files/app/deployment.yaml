# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MIT

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kv-sidecar
  labels:
    app: kv-sidecar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kv-sidecar
  template:
    metadata:
      labels:
        app: kv-sidecar
    spec:
      serviceAccountName: CHANGE_ME
      volumes:
      - name: secrets
        emptyDir: {}
      - name: vault-token
        emptyDir:
          medium: Memory

      securityContext:
        runAsGroup: 1000
        runAsUser: 1000

      initContainers:
      # The vault-authenticator container authenticates the container using the
      # kubernetes auth method and puts the resulting token on the filesystem.
      - name: vault-authenticator
        image: sethvargo/vault-kubernetes-authenticator:0.2.0
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsGroup: 1000
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: VAULT_ROLE
          value: myapp-role

      containers:
        # The consul-template container will pull secrets from Vault and expose
        # them as files on disk.
      - name: consul-template
        image: hashicorp/consul-template:0.21.3-light
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: secrets
          mountPath: /etc/secrets
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: CT_LOCAL_CONFIG
          value: |
            vault {
              vault_agent_token_file = "/var/run/secrets/vaultproject.io/.vault-token"
              ssl {
                enabled = false
              }
              retry {
                backoff = "1s"
              }
            }
            template {
              contents = <<EOH
                ---
                {{- with secret "secret/data/myapp/config" }}
                username: {{ .Data.data.username }}
                password: {{ .Data.data.password }}
                {{ end }}
              EOH
              destination = "/etc/secrets/config"
            }
      - name: app
        image: sethvargo/vault-demo-app:0.1.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: secrets
          mountPath: /etc/secrets
